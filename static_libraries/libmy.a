!<arch>
0-isupper.c/    0           0     0     644     184       `
#include "main.h"
/**
 * _isupper - check if $c is upper
 * @c: letter
 * Return: 0.
 */

int _isupper(int c)
{
  if (c >= 'A' && c <= 'Z')

    return (1);

  else

    return (0);
}
0-memset.c/     0           0     0     644     233       `
#include "main.h"

/**
 * _memset - function
 * @s: x
 * @b: x
 * @n: number
 * Return: X
 */

char *_memset(char *s, char b, unsigned int n)
{
  unsigned int i;

  for (i = 0; i < n; i++)
    {
      s[i] = b;
    }
  return (s);
}

0-putchar.c/    0           0     0     644     235       `
#include "main.h"

/**
 * main - Entry point
 *
 * Return: Always 0 (Success)
 */

int main(void)
{
  char *a = "_putchar";
  int i;

  for (i = 0; a[i] != '\0'; i++)
    {
      _putchar(a[i]);
    }
  _putchar('\n');
  return (0);
}

0-strcat.c/     0           0     0     644     311       `
#include "main.h"

/**
 * _strcat - function
 * @dest: destination
 * @src: source
 * Return: x
 */

char *_strcat(char *dest, char *src)
{
  int a, b;

  for (a = 0; dest[a] != '\0'; a++)
    ;

  for (b = 0; src[b] != '\0'; b++, a++)
    {
      dest[a] = src[b];
    }

  dest[a] = '\0';

  return (dest);
}

100-atoi.c/     0           0     0     644     120       `
#include "main.h"

/**
 * _atoi - function
 * @s: s
 * Return: 0
 */

int _atoi(char *s)
{
  s = s + 1;
  return (0);
}
1-isdigit.c/    0           0     0     644     191       `
#include "main.h"

/**
 * _isdigit - check if @c is a digit
 * @c: number
 * Return: 1 or 0
 */

int _isdigit(int c)
{
  if (c >= '0' && c <= '9')

    return (1);

  else

    return (0);
}

1-memcpy.c/     0           0     0     644     270       `
#include "main.h"

/**
 * _memcpy - function
 * @dest: destination
 * @src: source
 * @n: number
 * Return: X
 */

char *_memcpy(char *dest, char *src, unsigned int n)
{
  unsigned int i;

  for (i = 0; i < n; i++)
    {
      dest[i] = src[i];
    }
  return (dest);
}
1-strncat.c/    0           0     0     644     349       `
#include "main.h"

/**
 * _strncat - function
 * @dest: destination
 * @src: source
 * @n: number of byte
 * Return: x
 */

char *_strncat(char *dest, char *src, int n)
{
  int i, b, x;

  for (i = 0; dest[i] != '\0'; i++)
    ;
  x = i + n;

  for (b = 0; i != x && src[b] != '\0'; b++, i++)
    {
      dest[i] = src[b];
    }

  return (dest);
}

2-strchr.c/     0           0     0     644     305       `
#include "main.h"
#include <stddef.h>

/**
 * _strchr - function
 * @s: x
 * @c: x
 * Return: X
 */

char *_strchr(char *s, char c)
{
  int i;

  for (i = 0; s[i] != '\0'; i++)
    {
      if (s[i] == c)
	{
	  return (&s[i]);
	}
    }
  if (s[i] == c)
    {
      return (&s[i]);
    }
  return (NULL);
}

2-strcpy.c/     0           0     0     644     335       `
#include "main.h"

/**
 * _strncpy - fonction
 * @dest: destination
 * @src: source
 * @n: number of char
 * Return: x
 */

char *_strncpy(char *dest, char *src, int n)
{
  int x;

  for (x = 0; x < n && src[x] != '\0'; x++)
    {
      dest[x] = src[x];
    }
  for (; x < n; x++)
    {
      dest[x] = '\0';
    }
  return (dest);
}

2-strlen.c/     0           0     0     644     170       `
#include "main.h"

/**
 * _strlen - function
 * @s: test
 * Return: x
 */

int _strlen(char *s)
{
  int i;

  for (i = 0; s[i] != '\0'; i++)
    {
    }

  return (i);
}
3-islower.c/    0           0     0     644     232       `
#include "main.h"

/**
 * _islower - check if lower case
 * @c: single letter input
 * Return: 1 if int c is lowercase, 0 if otherwise
 */

int _islower(int c)
{
  if (c >= 'a' && c <= 'z')

    return (1);
  else
    return (0);
}
3-puts.c/       0           0     0     644     202       `
#include "main.h"

/**
 * _puts - function
 * @str: string
 * Return: x
 */

void _puts(char *str)
{
  int i;

  for (i = 0; str[i] != '\0'; i++)
    {
      _putchar(str[i]);
    }
  _putchar('\n');
}
3-strcmp.c/     0           0     0     644     256       `
#include "main.h"

/**
 * _strcmp - function
 * @s1: 1
 * @s2: 2
 * Return: x
 */
int _strcmp(char *s1, char *s2)
{
  int i;

  for (i = 0; s1[i] != '\0' && s2[i] != '\0'; i++)
    {
      if (s1[i] != s2[i])
	return (s1[i] - s2[i]);
    }
  return (0);
}
3-strspn.c/     0           0     0     644     419       `
#include "main.h"

/**
 * _strspn - function
 * @s: s
 * @accept: accept
 * Return: x
 */

unsigned int _strspn(char *s, char *accept)
{
  int i;
  int x = 0;
  int n = 0;
  int t = 0;

  for (i = 0; s[i] != '\0'; i++)
    {
      for (x = 0; accept[x] != '\0'; x++)
	{
	  if (s[i] == accept[x])
	    {
	      n = n + 1;
	    }
	}
      x = 0;

      t = t + 1;

      if (n != t)
	{
	  break;
	}
    }
  return (n);
}

4-isalpha.c/    0           0     0     644     285       `
#include "main.h"

/**
 * _isalpha - check if lower case
 * @c: single letter input
 * Return: 1 if int c is lowercase, 0 if otherwise
 */

int _isalpha(int c)
{
  if (c >= 'a' && c <= 'z')

    return (1);

  else if (c >= 'A' && c <= 'Z')

    return (1);

  else

    return (0);
}

4-strpbrk.c/    0           0     0     644     378       `
#include "main.h"
#include <stddef.h>

/**
 * _strpbrk - function
 * @s: s
 * @accept: accept
 * Return: x
 */

char *_strpbrk(char *s, char *accept)
{
  int i;
  int x = 0;
  int n = 0;

  for (i = 0; s[i] != '\0'; i++)
    {
      for (x = 0; accept[x] != '\0'; x++)
	{
	  if (s[i] == accept[x])
	    {
	      n = n + 1;
	      return (&s[i]);
	    }
	}
    }
  return (0);
}
5-strstr.c/     0           0     0     644     622       `
#include "main.h"
#include <stddef.h>

/**
 * _strstr - function
 * @haystack: haystack
 * @needle: needle
 * Return: 0;
 */

char *_strstr(char *haystack, char *needle)
{
  int i;
  int x;
  int n;
  int m;

  for (n = 0; needle[n]; n++)
    ;
  if (n > 0)
    {
      m = n - 1;

      for (i = 0; haystack[i] != '\0'; i++)
	{
	  for (x = 0; needle[x] != '\0'; x++)
	    {
	      if (haystack[i] == needle[x])
		{
		  if (haystack[i + m] == needle[x + m] && haystack[i] != '\0')
		    {
		      return (&haystack[i]);
		    }
		}
	    }
	}
    }
  else if (n == 0)
    {
      return(haystack);
    }
  return (NULL);
}
6-abs.c/        0           0     0     644     159       `
#include "main.h"

/**
 * _abs - print he absolute value.
 * @ab: number
 * Return: Always 0.
 */

int _abs(int ab)
{
  return (ab * ((ab > 0) - (ab < 0)));
}

9-strcpy.c/     0           0     0     644     258       `
#include "main.h"

/**
 * _strcpy - function
 * @dest: destination
 * @src: source
 * Return: x
 */

char *_strcpy(char *dest, char *src)
{
  int i;

  for (i = 0; src[i] != '\0'; i++)
    {
      dest[i] = src[i];
    }
  dest[i] = '\0';
  return (dest);
}
_putchar.c/     0           0     0     644     248       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
  return (write(1, &c, 1));
}
